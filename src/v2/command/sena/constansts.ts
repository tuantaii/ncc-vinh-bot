import { SenaCaculator } from './ultis';

export const BOT_NAME = 'SENA';
export const MYSELF_COMMAND = '*sena';
export const PLAY_COMMAND = '*jack';
export const CHECK_BALANCE_COMMAND = '*kttk';
export const WITHDRAW_COMMAND = '*trom';
export const ACCEPT_COMMAND = '36';
export const CHECK_TRANSACTION_COMMAND = '*logs';
export const CHECK_TRANSACTION_SEND_COMMAND = '*lsend';
export const STATISTICS_COMMAND = '*chan';
export const HELP_COMMAND = '*alo';
export const ID_BOT = '1840692108470521856';
export const OFF_WITHDRAW = '*offrut';
export const ON_WITHDRAW = '*onrut';
export const BLOCK_WITHDRAW_KEY = 'BLOCK_WITHDRAW_KEY';
export const NHA_CAI = '*nhacai';
export const MYIMAGE_QR =
  'https://myself-images.s3.ap-southeast-2.amazonaws.com/z6714769905770_b269e962c4ccf09d6428ca0da5e62d97.jpg';

export const VALID_COMMANDS = [
  MYSELF_COMMAND,
  PLAY_COMMAND,
  CHECK_BALANCE_COMMAND,
  WITHDRAW_COMMAND,
  CHECK_TRANSACTION_COMMAND,
  CHECK_TRANSACTION_SEND_COMMAND,
  STATISTICS_COMMAND,
  OFF_WITHDRAW,
  ON_WITHDRAW,
  NHA_CAI,
];

export const HDSD = `H∆∞·ªõng d·∫´n s·ª≠ d·ª•ng:
1. ${MYSELF_COMMAND}: Gi·ªõi thi·ªáu v·ªÅ Sena Bot
2. ${PLAY_COMMAND}: Ch∆°i game X√¨ D√°ch v·ªõi Sena Bot
3. ${CHECK_BALANCE_COMMAND}: Ki·ªÉm tra s·ªë d∆∞ t√†i kho·∫£n
4. ${WITHDRAW_COMMAND} <s·ªë ti·ªÅn>: R√∫t ti·ªÅn t·ª´ t√†i kho·∫£n c·ªßa b·∫°n <s·ªë ti·ªÅn>
5. ${CHECK_TRANSACTION_COMMAND} <transactionId>: Ki·ªÉm tra l·ªãch s·ª≠ giao d·ªãch
6. ${CHECK_TRANSACTION_SEND_COMMAND} <transactionId>: Ki·ªÉm tra l·ªãch s·ª≠ giao d·ªãch chuy·ªÉn ti·ªÅn
7. ${STATISTICS_COMMAND}: Th·ªëng k√™ top 10 ng∆∞·ªùi th·∫Øng nhi·ªÅu nh·∫•t
8. ${HELP_COMMAND}: Tr·ª£ gi√∫p v√† h∆∞·ªõng d·∫´n s·ª≠ d·ª•ng bot
ƒê·ªÉ n·∫°p ti·ªÅn, h√£y chuy·ªÉn token tr·ª±c ti·∫øp cho SENA.
--------------------------------------------------
C√°ch ch∆°i game X√¨ D√°ch:
1. Reply ho·∫∑c tag m·ªôt ng∆∞·ªùi n√†o ƒë√≥ v·ªõi c√∫ ph√°p *jack <@username> <s·ªë ti·ªÅn> ƒë·ªÉ b·∫Øt ƒë·∫ßu ch∆°i game X√¨ D√°ch v·ªõi Sena Bot.
2. B·∫°n s·∫Ω nh·∫≠n ƒë∆∞·ª£c 2 l√° b√†i ƒë·∫ßu ti√™n, v√† c√≥ th·ªÉ ch·ªçn r√∫t th√™m b√†i ho·∫∑c d·∫±n.
3. M·ª•c ti√™u l√† ƒë·∫°t ƒë∆∞·ª£c t·ªïng ƒëi·ªÉm g·∫ßn 21 nh·∫•t m√† kh√¥ng v∆∞·ª£t qu√° 21.
4. N·∫øu b·∫°n ƒë·∫°t ƒë∆∞·ª£c X√¨ B√†ng (2 l√° b√†i ƒë·∫ßu ti√™n l√† AA), b·∫°n s·∫Ω th·∫Øng ngay l·∫≠p t·ª©c. v√† th·∫Øng x3 s·ªë ti·ªÅn c∆∞·ª£c.
5. N·∫øu b·∫°n ƒë·∫°t ƒë∆∞·ª£c X√¨ Jack (2 l√° b√†i ƒë·∫ßu ti√™n l√† A v√† 10/J/Q/K), b·∫°n s·∫Ω th·∫Øng x2 s·ªë ti·ªÅn c∆∞·ª£c.
6. N·∫øu b·∫°n ƒë·∫°t ƒë∆∞·ª£c Ng≈© Linh (5 l√° b√†i c√≥ t·ªïng ƒëi·ªÉm t·ª´ 16 tr·ªü l√™n v√† th·∫•p h∆°n ho·∫∑c b·∫±ng 21), b·∫°n s·∫Ω th·∫Øng x2 s·ªë ti·ªÅn c∆∞·ª£c.
7. N·∫øu b·∫°n v∆∞·ª£t qu√° 21 ƒëi·ªÉm, b·∫°n s·∫Ω thua v√† m·∫•t s·ªë ti·ªÅn c∆∞·ª£c.
8. N·∫øu b·∫°n v√† ƒë·ªëi th·ªß c√≥ c√πng t·ªïng ƒëi·ªÉm, k·∫øt qu·∫£ s·∫Ω l√† h√≤a v√† kh√¥ng ai m·∫•t ti·ªÅn.
9. N·∫øu b·∫°n tr√™n 28 ƒëi·ªÉm (ngo·∫Øc c·∫ßn c√¢u), b·∫°n s·∫Ω thua g·∫•p ƒë√¥i s·ªë ti·ªÅn c∆∞·ª£c.
--------------------------------------------------`;

export const EMPTY_BALANCE_MESSAGES = [
  `Ngh√®o, ki·∫øm th√™m ti·ªÅn ƒë·ªÉ donate cho tao, √≠t th√¨ 5 qu·∫£ tr∆∞·ªõng, nhi·ªÅu th√¨ 1 qu·∫£ t√™n l·ª≠a`,
  'H·∫æT TI·ªÄN R·ªíI! Pay more for love',
];

export const MAX_CARDS = 5;
export const MAX_SCORE = 21;
export const MIN_SCORE = 16;
export const DOUBLE_COST_SCORE = 28;
export const WR_SYSTEM = 'system';

export enum GAME_RESULT {
  HOST_WIN,
  GUEST_WIN,
  DRAW,
}

export const gameMessages = {
  [GAME_RESULT.HOST_WIN]: (data: {
    hostName: string;
    hostCardDisplay: string;
    hostScore: number;
    guestName: string;
    guestCardDisplay: string;
    guestScore: number;
    cost: number;
  }) =>
    `C·∫£ 2 ƒë√£ d·∫±n.
    B√†i c·ªßa ${data.hostName} l√† ${data.hostCardDisplay} => T·ªïng: ${data.hostScore}.
    B√†i c·ªßa ${data.guestName} l√† ${data.guestCardDisplay} => T·ªïng: ${data.guestScore}.
    K·∫øt qu·∫£: ${data.hostName} th·∫Øng v√† nh·∫≠n ƒë∆∞·ª£c ${SenaCaculator.formatVND(data.cost)} token`,
  [GAME_RESULT.GUEST_WIN]: (data: {
    hostName: string;
    hostCardDisplay: string;
    hostScore: number;
    guestName: string;
    guestCardDisplay: string;
    guestScore: number;
    cost: number;
  }) =>
    `C·∫£ 2 ƒë√£ d·∫±n.
    B√†i c·ªßa ${data.hostName} l√† ${data.hostCardDisplay} => T·ªïng: ${data.hostScore}.
    B√†i c·ªßa ${data.guestName} l√† ${data.guestCardDisplay} => T·ªïng: ${data.guestScore}.
    K·∫øt qu·∫£: ${data.guestName} th·∫Øng v√† nh·∫≠n ƒë∆∞·ª£c ${SenaCaculator.formatVND(data.cost)} token`,
  guestPlayerStood: (data: { hostName: string; guestName: string }) =>
    `${data.guestName} ƒë√£ d·∫±n, t·ªõi l∆∞·ª£t ${data.hostName}.`,
  playerHitting: (data: {
    guestName: string;
    cardCount: number;
    hostName?: string;
  }) =>
    data.hostName == null
      ? `${data.guestName} ƒë√£ d·∫±n, ${data.hostName} ƒëang r√∫t ${data.cardCount} l√° b√†i.`
      : `${data.guestName} ƒëang r√∫t ${data.cardCount} l√° b√†i.`,

  userHand: (data: {
    userName: string;
    cardDisplay: string;
    score: number;
    isDoubleAce?: boolean;
  }) =>
    data.isDoubleAce
      ? `\nB√†i c·ªßa ${data.userName} l√† ${data.cardDisplay} üëâ X√å B√ÄNNNNNNN l√†m b·ªë t·∫•t c·∫£`
      : `\nB√†i c·ªßa ${data.userName} l√† ${data.cardDisplay}, T·ªïng ƒëi·ªÉm l√† ${data.score}`,

  overScoreDoubleCost: (data: {
    winnerName: string;
    loserName: string;
    cost: number;
    winnerCardDisplay: string;
    winnerScore: number;
    loseCardDisplay: string;
    loseScore: number;
  }) =>
    `B√†i c·ªßa ${data.winnerName} l√† ${data.winnerCardDisplay} => T·ªïng: ${data.winnerScore}.\nB√†i c·ªßa ${data.loserName} l√† ${data.loseCardDisplay} => T·ªïng: ${data.loseScore}.\n${data.loserName} ngo·∫Øc c·∫ßn c√¢u, ch√°y tr√™n ${DOUBLE_COST_SCORE} ƒëi·ªÉm thua x2 ti·ªÅn, bay ${SenaCaculator.formatVND(data.cost)} token`,
  blackjack: (data: { winnerName: string; loserName: string; cost: number }) =>
    `${data.winnerName} ƒë∆∞·ª£c X√¨ Jack, ${data.loserName} thua. x2 money. l·ª•m ${SenaCaculator.formatVND(data.cost)} token`,
  doubleAce: (data: { winnerName: string; loserName: string; cost: number }) =>
    `${data.winnerName} ƒë∆∞·ª£c X√¨ B√†ng, ${data.loserName} thua. x3 money. l·ª•m ${SenaCaculator.formatVND(data.cost)} token`,
  fiveSprits: (data: { winnerName: string; loserName: string; cost: number }) =>
    `${data.winnerName} ƒë∆∞·ª£c ng≈© linh, ${data.loserName} thua. x2 money. l·ª•m ${SenaCaculator.formatVND(data.cost)} token`,
  [GAME_RESULT.DRAW]: (data: {
    hostName: string;
    hostCardDisplay: string;
    hostScore: number;
    guestName: string;
    guestCardDisplay: string;
    guestScore: number;
  }) =>
    `B√†i c·ªßa ${data.hostName} l√† ${data.hostCardDisplay} => T·ªïng: ${data.hostScore}.\nB√†i c·ªßa ${data.guestName} l√† ${data.guestCardDisplay} => T·ªïng: ${data.guestScore}.\nK·∫øt qu·∫£: H√íAAAAAAAA`,
};
